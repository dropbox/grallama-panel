{"version":3,"sources":["../src/grallama_ctrl.js"],"names":["MetricsPanelCtrl","_","kbn","TimeSeries","rendering","GraLLAMACtrl","$scope","$injector","$rootScope","panelDefaults","legend","show","values","links","datasource","maxDataPoints","interval","targets","cacheTimeout","nullPointMode","legendType","aliasColors","format","valueName","strokeWidth","fontSize","combine","threshold","label","colorMap","limits","colors","defaults","panel","events","on","onRender","bind","onDataReceived","onDataError","onInitEditMode","addEditorTab","unitFormats","getUnitFormats","subItem","value","render","series","color","alias","data","parseSeries","matrix","parseMatrix","colormap","hash","srcs","Set","dsts","angular","forEach","datapoint","datavalue","Number","stats","current","toFixed","split","src","dst","add","undefined","limit","i","Array","from","map","serie","dataList","seriesHandler","seriesData","datapoints","target","flotpairs","getFlotPairs","scope","elem","attrs","ctrl","templateUrl"],"mappings":"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","file":"grallama_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport kbn from 'app/core/utils/kbn';\nimport TimeSeries from 'app/core/time_series';\nimport rendering from './rendering';\n\nexport class GraLLAMACtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    this.$rootScope = $rootScope;\n\n    var panelDefaults = {\n      legend: {\n        show: true, // disable/enable legend\n        values: true\n      },\n      links: [],\n      datasource: null,\n      maxDataPoints: 3,\n      interval: null,\n      targets: [{}],\n      cacheTimeout: null,\n      nullPointMode: 'connected',\n      legendType: 'Under graph',\n      aliasColors: {},\n      format: 'short',\n      valueName: 'current',\n      strokeWidth: 1,\n      fontSize: '60%',\n\t  combine: {\n\t    threshold: 0.0,\n\t    label: 'Others'\n\t  },\n      colorMap: {\n          limits: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n          colors: ['#6ea009', \"#D9A303\", \"#D38E02\", \"#CE7A02\", \"#C86501\", \"#C35101\",\n                   \"#BD3D01\", \"#B82800\", \"#B21400\", \"#AD0000\"],\n      },\n    };\n\n    _.defaults(this.panel, panelDefaults);\n    _.defaults(this.panel.legend, panelDefaults.legend);\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/dropbox-grallama-panel/editor.html', 2);\n    this.unitFormats = kbn.getUnitFormats();\n  }\n\n  setUnitFormat(subItem) {\n    this.panel.format = subItem.value;\n    this.render();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  changeSeriesColor(series, color) {\n    series.color = color;\n    this.panel.aliasColors[series.alias] = series.color;\n    this.render();\n  }\n\n  onRender() {\n    this.data = this.parseSeries(this.series);\n    this.matrix = this.parseMatrix(this.series);\n  }\n\n  parseMatrix(series) {\n      var colormap = this.panel.colorMap;\n      var hash = {};\n      var srcs = new Set();\n      var dsts = new Set();\n      var color;\n      hash['data'] = {};\n      angular.forEach(series, function(datapoint) {\n          var datavalue = Number(datapoint.stats.current).toFixed(1);\n          var [src, dst] = datapoint.label.split('-');\n          srcs.add(src);\n          dsts.add(dst);\n          if (hash['data'][src] === undefined) {\n              hash['data'][src] = {};\n          }\n          angular.forEach(colormap.limits, function(limit, i) {\n              if ((datavalue >= limit && datavalue < colormap.limits[i+1]) ||\n                 (datavalue >= limit && colormap.limits[i+1] === undefined)) {\n                  color = colormap.colors[i];\n              }\n          });\n          hash['data'][src][dst] = {\n              value: datavalue,\n              color: color\n          };\n      });\n      hash['dsts'] = Array.from(dsts);\n      return hash;\n  }\n\n  parseSeries(series) {\n    return _.map(this.series, (serie, i) => {\n      return {\n        label: serie.alias,\n        data: serie.stats[this.panel.valueName],\n        color: this.panel.aliasColors[serie.alias] || this.$rootScope.colors[i]\n      };\n    });\n  }\n\n  onDataReceived(dataList) {\n    this.series = dataList.map(this.seriesHandler.bind(this));\n    this.data = this.parseSeries(this.series);\n    this.matrix = this.parseMatrix(this.series);\n    this.render(this.data);\n  }\n\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n\n    series.flotpairs = series.getFlotPairs(this.panel.nullPointMode);\n    return series;\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    rendering(scope, elem, attrs, ctrl);\n  }\n}\n\nGraLLAMACtrl.templateUrl = 'module.html';\n"]}